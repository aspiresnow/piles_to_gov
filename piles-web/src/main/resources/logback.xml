<?xml version="1.0" encoding="UTF-8"?>
<configuration>

    <!--必须在application.yml中设置项目名 spring.application.name -->
    <springProperty name="PROJECT_NAME" source="spring.application.name"></springProperty>
    <property name="LOGGER_LEVEL" value="INFO"/>
    <property name="LOG_HOME" value="/opt/logs/${PROJECT_NAME}"/>
    <property name="PROJECT_NAME" value="${PROJECT_NAME}"/>
    <property name="ERROR_LOG" value="${PROJECT_NAME}-error"/>

    <!-- 控制台输出 -->
    <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
        <layout class="ch.qos.logback.classic.PatternLayout">
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{100} - %msg%n</pattern>
        </layout>
    </appender>

    <!-- 保存所有的日志 文件日志输出 -->
    <!--RollingFileAppender滚动记录文件，先将日志记录到指定文件，当符合某个条件时，将日志记录到其他文件。-->
    <appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!-- file被写入的文件名，可以是相对目录，也可以是绝对目录，如果上级目录不存在会自动创建，没有默认值。-->
        <file>${LOG_HOME}/${PROJECT_NAME}.log</file>
        <!-- append如果是 true，日志被追加到文件结尾，如果是 false，清空现存文件，默认是true。-->
        <append>true</append>
        <!-- rollingPolicy当发生滚动时，决定 RollingFileAppender 的行为，涉及文件移动和重命名。-->
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <fileNamePattern>${LOG_HOME}/${PROJECT_NAME}.log.%d{yyyy-MM-dd}</fileNamePattern>
            <!--日志保存天数-->
            <maxHistory>10</maxHistory>
            <!--</TimeBasedFileNamingAndTriggeringPolicy>-->
        </rollingPolicy>
        <encoder>
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{100} - %msg%n</pattern>
            <immediateFlush>true</immediateFlush>
        </encoder>
    </appender>
    <root level="INFO">
        <appender-ref ref="STDOUT"/>
        <appender-ref ref="FILE"/>
    </root>
</configuration>
